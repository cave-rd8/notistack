{"version":3,"file":"notistack.cjs.production.min.js","sources":["../src/SnackbarContext.ts","../src/utils/constants.ts","../src/SnackbarContent/SnackbarContent.tsx","../src/SnackbarItem/SnackbarItem.util.ts","../src/utils/defaultIconVariants.tsx","../src/utils/createChainedFunction.js","../src/utils/useEventCallback.js","../src/SnackbarItem/SnackbarItem.tsx","../src/SnackbarItem/Snackbar.js","../src/SnackbarContainer.tsx","../src/SnackbarProvider.tsx","../src/useSnackbar.ts","../src/withSnackbar.js"],"sourcesContent":["import React from 'react';\nimport { ProviderContext } from '.';\n\n// @ts-ignore\nexport default React.createContext<ProviderContext>();\n","import Slide from '@mui/material/Slide';\nimport { SnackbarClassKey } from '@mui/material/Snackbar';\nimport { CloseReason, ContainerClassKey, SnackbarProviderProps, VariantType, SnackbarOrigin, VariantClassKey } from '../index';\nimport { SnackbarItemProps } from '../SnackbarItem';\nimport { Snack } from '../SnackbarProvider';\n\nexport const allClasses: {\n    mui: Record<SnackbarClassKey, {}>;\n    container: Record<ContainerClassKey, {}>;\n} = {\n    mui: {\n        root: {},\n        anchorOriginTopCenter: {},\n        anchorOriginBottomCenter: {},\n        anchorOriginTopRight: {},\n        anchorOriginBottomRight: {},\n        anchorOriginTopLeft: {},\n        anchorOriginBottomLeft: {},\n    },\n    container: {\n        containerRoot: {},\n        containerAnchorOriginTopCenter: {},\n        containerAnchorOriginBottomCenter: {},\n        containerAnchorOriginTopRight: {},\n        containerAnchorOriginBottomRight: {},\n        containerAnchorOriginTopLeft: {},\n        containerAnchorOriginBottomLeft: {},\n    },\n};\n\nexport const MESSAGES = {\n    NO_PERSIST_ALL: 'WARNING - notistack: Reached maxSnack while all enqueued snackbars have \\'persist\\' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented.',\n};\n\nexport const SNACKBAR_INDENTS = {\n    view: { default: 20, dense: 4 },\n    snackbar: { default: 6, dense: 2 },\n};\n\nexport const DEFAULTS = {\n    maxSnack: 3,\n    dense: false,\n    hideIconVariant: false,\n    variant: 'default' as VariantType,\n    autoHideDuration: 5000,\n    anchorOrigin: { vertical: 'bottom', horizontal: 'left' } as SnackbarOrigin,\n    TransitionComponent: Slide,\n    transitionDuration: {\n        enter: 225,\n        exit: 195,\n    },\n};\n\nexport const capitalise = (text: string): string => text.charAt(0).toUpperCase() + text.slice(1);\n\nexport const originKeyExtractor = (anchor: Snack['anchorOrigin']): string => (\n    `${capitalise(anchor.vertical)}${capitalise(anchor.horizontal)}`\n);\n\n/**\n * Omit SnackbarContainer class keys that are not needed for SnackbarItem\n */\nexport const omitContainerKeys = (classes: SnackbarProviderProps['classes']): SnackbarItemProps['classes'] => (\n    // @ts-ignore\n    Object.keys(classes).filter(key => !allClasses.container[key]).reduce((obj, key) => ({ ...obj, [key]: classes[key] }), {})\n);\n\nexport const REASONS: { [key: string]: CloseReason } = {\n    TIMEOUT: 'timeout',\n    CLICKAWAY: 'clickaway',\n    MAXSNACK: 'maxsnack',\n    INSTRUCTED: 'instructed',\n};\n\n/** Tranforms classes name */\nexport const transformer = {\n    toContainerAnchorOrigin: (origin: string) => `containerAnchorOrigin${origin}` as ContainerClassKey,\n    toAnchorOrigin: ({ vertical, horizontal }: SnackbarOrigin) => (\n        `anchorOrigin${capitalise(vertical)}${capitalise(horizontal)}` as SnackbarClassKey\n    ),\n    toVariant: (variant: VariantType) => `variant${capitalise(variant)}` as VariantClassKey,\n};\n\nexport const isDefined = (value: string | null | undefined | number): boolean => (!!value || value === 0);\n\nconst numberOrNull = (numberish?: number | null) => (\n    typeof numberish === 'number' || numberish === null\n);\n\n// @ts-ignore\nexport const merge = (options, props, defaults) => (name: keyof Snack): any => {\n    if (name === 'autoHideDuration') {\n        if (numberOrNull(options.autoHideDuration)) return options.autoHideDuration;\n        if (numberOrNull(props.autoHideDuration)) return props.autoHideDuration;\n        return DEFAULTS.autoHideDuration;\n    }\n\n    return options[name] || props[name] || defaults[name];\n};\n\nexport function objectMerge(options = {}, props = {}, defaults = {}) {\n    return {\n        ...defaults,\n        ...props,\n        ...options,\n    };\n}\n","import React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { SnackbarContentProps } from '../index';\n\nconst componentName = 'SnackbarContent';\n\nconst classes = {\n    root: `${componentName}-root`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexGrow: 1,\n        [theme.breakpoints.up('sm')]: {\n            flexGrow: 'initial',\n            minWidth: 288,\n        },\n    },\n}));\n\nconst SnackbarContent = forwardRef<HTMLDivElement, SnackbarContentProps>(({ className, ...props }, ref) => (\n    <Root ref={ref} className={clsx(classes.root, className)} {...props} />\n));\n\nexport default SnackbarContent;\n","import { Snack } from '../SnackbarProvider';\n\nconst DIRECTION = {\n    right: 'left',\n    left: 'right',\n    bottom: 'up',\n    top: 'down',\n} as const;\nexport type DirectionType = typeof DIRECTION[keyof typeof DIRECTION]\n\nexport const getTransitionDirection = (anchorOrigin: Snack['anchorOrigin']): DirectionType => {\n    if (anchorOrigin.horizontal !== 'center') {\n        return DIRECTION[anchorOrigin.horizontal];\n    }\n    return DIRECTION[anchorOrigin.vertical];\n};\n","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon';\nimport { IconVariant } from '../index';\n\ntype Icon = (props: SvgIconProps) => JSX.Element;\n\nconst CheckIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z\" />\n    </SvgIcon>\n);\n\nconst WarningIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\" />\n    </SvgIcon>\n);\n\nconst ErrorIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\" />\n    </SvgIcon>\n);\n\nconst InfoIcon: Icon = props => (\n    <SvgIcon {...props}>\n        <path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\n        0 22,12A10,10 0 0,0 12,2Z\" />\n    </SvgIcon>\n);\n\nconst iconStyles = {\n    fontSize: 20,\n    marginInlineEnd: 8,\n};\n\nconst defaultIconVariants: IconVariant = {\n    default: undefined,\n    success: <CheckIcon style={iconStyles} />,\n    warning: <WarningIcon style={iconStyles} />,\n    error: <ErrorIcon style={iconStyles} />,\n    info: <InfoIcon style={iconStyles} />,\n};\n\nexport default defaultIconVariants;\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/createChainedFunction.js\n */\nexport default function createChainedFunction(funcs, extraArg) {\n    return funcs.reduce((acc, func) => {\n        if (func == null) return acc;\n\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof func !== 'function') {\n                // eslint-disable-next-line no-console\n                console.error('Invalid Argument Type. must only provide functions, undefined, or null.');\n            }\n        }\n\n        return function chainedFunction(...args) {\n            const argums = [...args];\n            if (extraArg && argums.indexOf(extraArg) === -1) {\n                argums.push(extraArg);\n            }\n            acc.apply(this, argums);\n            func.apply(this, argums);\n        };\n    }, () => { });\n}\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/utils/useEventCallback.js\n */\nimport * as React from 'react';\n\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nexport default function useEventCallback(fn) {\n    const ref = React.useRef(fn);\n    useEnhancedEffect(() => {\n        ref.current = fn;\n    });\n    return React.useCallback((...args) => (0, ref.current)(...args), []);\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { emphasize, styled } from '@mui/material/styles';\nimport Collapse from '@mui/material/Collapse';\nimport type { SnackbarClassKey } from '@mui/material';\nimport SnackbarContent from '../SnackbarContent';\nimport { getTransitionDirection } from './SnackbarItem.util';\nimport { REASONS, objectMerge, DEFAULTS, transformer } from '../utils/constants';\nimport { SharedProps, RequiredBy, TransitionHandlerProps, SnackbarProviderProps as ProviderProps, ClassNameMap } from '../index';\nimport defaultIconVariants from '../utils/defaultIconVariants';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport { Snack } from '../SnackbarProvider';\nimport Snackbar from './Snackbar';\n\nconst componentName = 'SnackbarItem';\n\nconst classes = {\n    contentRoot: `${componentName}-contentRoot`,\n    lessPadding: `${componentName}-lessPadding`,\n    variantSuccess: `${componentName}-variantSuccess`,\n    variantError: `${componentName}-variantError`,\n    variantInfo: `${componentName}-variantInfo`,\n    variantWarning: `${componentName}-variantWarning`,\n    message: `${componentName}-message`,\n    action: `${componentName}-action`,\n    wrappedRoot: `${componentName}-wrappedRoot`,\n};\n\nconst StyledSnackbar = styled(Snackbar)(({ theme }) => {\n    const mode = theme.palette.mode || theme.palette.type;\n    const backgroundColor = emphasize(theme.palette.background.default, mode === 'light' ? 0.8 : 0.98);\n\n    return {\n        [`&.${classes.wrappedRoot}`]: {\n            position: 'relative',\n            transform: 'translateX(0)',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n        },\n        [`.${classes.contentRoot}`]: {\n            ...theme.typography.body2,\n            backgroundColor,\n            color: theme.palette.getContrastText(backgroundColor),\n            alignItems: 'center',\n            padding: '6px 16px',\n            borderRadius: '4px',\n            boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)',\n        },\n        [`.${classes.lessPadding}`]: {\n            paddingLeft: 8 * 2.5,\n        },\n        [`.${classes.variantSuccess}`]: {\n            backgroundColor: '#43a047', // green\n            color: '#fff',\n        },\n        [`.${classes.variantError}`]: {\n            backgroundColor: '#d32f2f', // dark red\n            color: '#fff',\n        },\n        [`.${classes.variantInfo}`]: {\n            backgroundColor: '#2196f3', // nice blue\n            color: '#fff',\n        },\n        [`.${classes.variantWarning}`]: {\n            backgroundColor: '#ff9800', // amber\n            color: '#fff',\n        },\n        [`.${classes.message}`]: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: '8px 0',\n        },\n        [`.${classes.action}`]: {\n            display: 'flex',\n            alignItems: 'center',\n            marginLeft: 'auto',\n            paddingLeft: 16,\n            marginRight: -8,\n        },\n    };\n});\n\ntype RemovedProps =\n    | 'variant' // the one received from Provider is processed and passed to snack prop\n    | 'anchorOrigin' // same as above\n    | 'autoHideDuration' // same as above\n    | 'preventDuplicate' // the one recevied from enqueueSnackbar is processed in provider, therefore shouldn't be passed to SnackbarItem */\n\nexport interface SnackbarItemProps extends RequiredBy<Omit<SharedProps, RemovedProps>, 'onEntered' | 'onExited' | 'onClose'> {\n    snack: Snack;\n    dense: ProviderProps['dense'];\n    iconVariant: ProviderProps['iconVariant'];\n    hideIconVariant: ProviderProps['hideIconVariant'];\n    classes: Partial<ClassNameMap<SnackbarClassKey>>;\n}\n\nconst SnackbarItem: React.FC<SnackbarItemProps> = ({ classes: propClasses, ...props }) => {\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\n    const [collapsed, setCollapsed] = useState(true);\n\n    useEffect(() => (): void => {\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n    }, []);\n\n    const handleClose = createChainedFunction([props.snack.onClose, props.onClose], props.snack.key);\n\n    const handleEntered: TransitionHandlerProps['onEntered'] = () => {\n        if (props.snack.requestClose) {\n            handleClose(null, REASONS.INSTRCUTED);\n        }\n    };\n\n    const handleExitedScreen = (): void => {\n        timeout.current = setTimeout(() => {\n            setCollapsed(!collapsed);\n        }, 125);\n    };\n\n    const {\n        style,\n        dense,\n        ariaAttributes: otherAriaAttributes,\n        className: otherClassName,\n        hideIconVariant,\n        iconVariant,\n        snack,\n        action: otherAction,\n        content: otherContent,\n        TransitionComponent: otherTranComponent,\n        TransitionProps: otherTranProps,\n        transitionDuration: otherTranDuration,\n        onEnter: ignoredOnEnter,\n        onEntered: ignoredOnEntered,\n        onEntering: ignoredOnEntering,\n        onExit: ignoredOnExit,\n        onExited: ignoredOnExited,\n        onExiting: ignoredOnExiting,\n        ...other\n    } = props;\n\n    const {\n        persist,\n        key,\n        open,\n        entered,\n        requestClose,\n        className: singleClassName,\n        variant,\n        content: singleContent,\n        action: singleAction,\n        ariaAttributes: singleAriaAttributes,\n        anchorOrigin,\n        message: snackMessage,\n        TransitionComponent: singleTranComponent,\n        TransitionProps: singleTranProps,\n        transitionDuration: singleTranDuration,\n        onEnter,\n        onEntered,\n        onEntering,\n        onExit,\n        onExited,\n        onExiting,\n        ...singleSnackProps\n    } = snack;\n\n    const icon = {\n        ...defaultIconVariants,\n        ...iconVariant,\n    }[variant];\n\n    const ariaAttributes = {\n        'aria-describedby': 'notistack-snackbar',\n        ...objectMerge(singleAriaAttributes, otherAriaAttributes),\n    };\n\n    const TransitionComponent = singleTranComponent || otherTranComponent || DEFAULTS.TransitionComponent;\n    const transitionDuration = objectMerge(singleTranDuration, otherTranDuration, DEFAULTS.transitionDuration);\n    const transitionProps = {\n        direction: getTransitionDirection(anchorOrigin),\n        ...objectMerge(singleTranProps, otherTranProps),\n    };\n\n    let action = singleAction || otherAction;\n    if (typeof action === 'function') {\n        action = action(key);\n    }\n\n    let content = singleContent || otherContent;\n    if (typeof content === 'function') {\n        content = content(key, snack.message);\n    }\n\n    // eslint-disable-next-line operator-linebreak\n    const callbacks: { [key in keyof TransitionHandlerProps]?: any } =\n        ['onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].reduce((acc, cbName) => ({\n            ...acc,\n            [cbName]: createChainedFunction([\n                props.snack[cbName as keyof Snack],\n                props[cbName as keyof SnackbarItemProps],\n            ], props.snack.key),\n        }), {});\n\n    return (\n        <Collapse\n            unmountOnExit\n            timeout={175}\n            in={collapsed}\n            onExited={callbacks.onExited}\n        >\n            <StyledSnackbar\n                {...other}\n                {...singleSnackProps}\n                open={open}\n                className={clsx(\n                    propClasses.root,\n                    classes.wrappedRoot,\n                    propClasses[transformer.toAnchorOrigin(anchorOrigin)],\n                )}\n                onClose={handleClose}\n            >\n                <TransitionComponent\n                    appear\n                    in={open}\n                    timeout={transitionDuration}\n                    {...transitionProps}\n                    onExit={callbacks.onExit}\n                    onExiting={callbacks.onExiting}\n                    onExited={handleExitedScreen}\n                    onEnter={callbacks.onEnter}\n                    onEntering={callbacks.onEntering}\n                    // order matters. first callbacks.onEntered to set entered: true,\n                    // then handleEntered to check if there's a request for closing\n                    onEntered={createChainedFunction([callbacks.onEntered, handleEntered])}\n                >\n                    {/* @ts-ignore */}\n                    {content || (\n                        <SnackbarContent\n                            {...ariaAttributes}\n                            role=\"alert\"\n                            style={style}\n                            className={clsx(\n                                classes.contentRoot,\n                                { [classes.lessPadding]: !hideIconVariant && icon },\n                                classes[transformer.toVariant(variant)],\n                                propClasses[transformer.toVariant(variant)],\n                                otherClassName,\n                                singleClassName,\n                            )}\n                        >\n                            <div id={ariaAttributes['aria-describedby']} className={classes.message}>\n                                {!hideIconVariant ? icon : null}\n                                {snackMessage}\n                            </div>\n                            {action && (\n                                <div className={classes.action}>{action}</div>\n                            )}\n                        </SnackbarContent>\n                    )}\n                </TransitionComponent>\n            </StyledSnackbar>\n        </Collapse>\n    );\n};\n\nexport default SnackbarItem;\n","/**\n * @link https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Snackbar/Snackbar.js\n */\nimport * as React from 'react';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { REASONS } from '../utils/constants';\nimport useEventCallback from '../utils/useEventCallback';\n\nconst Snackbar = React.forwardRef((props, ref) => {\n    const {\n        children,\n        autoHideDuration,\n        ClickAwayListenerProps,\n        disableWindowBlurListener = false,\n        onClose,\n        onMouseEnter,\n        onMouseLeave,\n        open,\n        resumeHideDuration,\n        ...other\n    } = props;\n\n    const timerAutoHide = React.useRef();\n\n    const handleClose = useEventCallback((...args) => {\n        if (onClose) {\n            onClose(...args);\n        }\n    });\n\n    const setAutoHideTimer = useEventCallback((autoHideDurationParam) => {\n        if (!onClose || autoHideDurationParam == null) {\n            return;\n        }\n\n        clearTimeout(timerAutoHide.current);\n        timerAutoHide.current = setTimeout(() => {\n            handleClose(null, REASONS.TIMEOUT);\n        }, autoHideDurationParam);\n    });\n\n    React.useEffect(() => {\n        if (open) {\n            setAutoHideTimer(autoHideDuration);\n        }\n\n        return () => {\n            clearTimeout(timerAutoHide.current);\n        };\n    }, [open, autoHideDuration, setAutoHideTimer]);\n\n    /**\n     * Pause the timer when the user is interacting with the Snackbar\n     * or when the user hide the window.\n     */\n    const handlePause = () => {\n        clearTimeout(timerAutoHide.current);\n    };\n\n    /**\n     * Restart the timer when the user is no longer interacting with the Snackbar\n     * or when the window is shown back.\n     */\n    const handleResume = React.useCallback(() => {\n        if (autoHideDuration != null) {\n            setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n        }\n    }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n    const handleMouseEnter = (event) => {\n        if (onMouseEnter) {\n            onMouseEnter(event);\n        }\n        handlePause();\n    };\n\n    const handleMouseLeave = (event) => {\n        if (onMouseLeave) {\n            onMouseLeave(event);\n        }\n        handleResume();\n    };\n\n    const handleClickAway = (event) => {\n        if (onClose) {\n            onClose(event, REASONS.CLICKAWAY);\n        }\n    };\n\n    React.useEffect(() => {\n        if (!disableWindowBlurListener && open) {\n            window.addEventListener('focus', handleResume);\n            window.addEventListener('blur', handlePause);\n\n            return () => {\n                window.removeEventListener('focus', handleResume);\n                window.removeEventListener('blur', handlePause);\n            };\n        }\n\n        return undefined;\n    }, [disableWindowBlurListener, handleResume, open]);\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway} {...ClickAwayListenerProps}>\n            <div onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} ref={ref} {...other}>\n                {children}\n            </div>\n        </ClickAwayListener>\n    );\n});\n\nexport default Snackbar;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { SNACKBAR_INDENTS } from './utils/constants';\nimport { SnackbarProviderProps } from '.';\n\nconst collapse = {\n    // Material-UI 4.12.x and above uses MuiCollapse-root; earlier versions use\n    // Mui-Collapse-container.  https://github.com/mui-org/material-ui/pull/24084\n    container: '& > .MuiCollapse-container, & > .MuiCollapse-root',\n    wrapper: '& > .MuiCollapse-container > .MuiCollapse-wrapper, & > .MuiCollapse-root > .MuiCollapse-wrapper',\n};\n\nconst xsWidthMargin = 16;\n\nconst componentName = 'SnackbarContainer';\n\nconst classes = {\n    root: `${componentName}-root`,\n    rootDense: `${componentName}-rootDense`,\n    top: `${componentName}-top`,\n    bottom: `${componentName}-bottom`,\n    left: `${componentName}-left`,\n    right: `${componentName}-right`,\n    center: `${componentName}-center`,\n};\n\nconst Root = styled('div')(({ theme }) => ({\n    [`&.${classes.root}`]: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        maxHeight: '100%',\n        position: 'fixed',\n        zIndex: theme.zIndex.snackbar,\n        height: 'auto',\n        width: 'auto',\n        transition: 'top 300ms ease 0ms, right 300ms ease 0ms, bottom 300ms ease 0ms, left 300ms ease 0ms, margin 300ms ease 0ms, max-width 300ms ease 0ms',\n        // container itself is invisible and should not block clicks, clicks should be passed to its children\n        pointerEvents: 'none',\n        [collapse.container]: {\n            pointerEvents: 'all',\n        },\n        [collapse.wrapper]: {\n            padding: `${SNACKBAR_INDENTS.snackbar.default}px 0px`,\n            transition: 'padding 300ms ease 0ms',\n        },\n        maxWidth: `calc(100% - ${SNACKBAR_INDENTS.view.default * 2}px)`,\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            maxWidth: `calc(100% - ${xsWidthMargin * 2}px)`,\n        },\n    },\n    [`&.${classes.rootDense}`]: {\n        [collapse.wrapper]: {\n            padding: `${SNACKBAR_INDENTS.snackbar.dense}px 0px`,\n        },\n    },\n    [`&.${classes.top}`]: {\n        top: SNACKBAR_INDENTS.view.default - SNACKBAR_INDENTS.snackbar.default,\n        flexDirection: 'column',\n    },\n    [`&.${classes.bottom}`]: {\n        bottom: SNACKBAR_INDENTS.view.default - SNACKBAR_INDENTS.snackbar.default,\n        flexDirection: 'column-reverse',\n    },\n    [`&.${classes.left}`]: {\n        left: SNACKBAR_INDENTS.view.default,\n        [theme.breakpoints.up('sm')]: {\n            alignItems: 'flex-start',\n        },\n        [theme.breakpoints.down('sm')]: {\n            left: `${xsWidthMargin}px`,\n        },\n    },\n    [`&.${classes.right}`]: {\n        right: SNACKBAR_INDENTS.view.default,\n        [theme.breakpoints.up('sm')]: {\n            alignItems: 'flex-end',\n        },\n        [theme.breakpoints.down('sm')]: {\n            right: `${xsWidthMargin}px`,\n        },\n    },\n    [`&.${classes.center}`]: {\n        left: '50%',\n        transform: 'translateX(-50%)',\n        [theme.breakpoints.up('sm')]: {\n            alignItems: 'center',\n        },\n    },\n}));\n\ninterface SnackbarContainerProps {\n    children: JSX.Element | JSX.Element[];\n    className?: string;\n    dense: SnackbarProviderProps['dense'];\n    anchorOrigin: NonNullable<SnackbarProviderProps['anchorOrigin']>;\n}\n\nconst SnackbarContainer: React.FC<SnackbarContainerProps> = (props) => {\n    const { className, anchorOrigin, dense, ...other } = props;\n\n    const combinedClassname = clsx(\n        classes[anchorOrigin.vertical],\n        classes[anchorOrigin.horizontal],\n        { [classes.rootDense]: dense },\n        classes.root, // root should come after others to override maxWidth\n        className,\n    );\n\n    return (\n        <Root className={combinedClassname} {...other} />\n    );\n};\n\nexport default React.memo(SnackbarContainer);\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\nimport SnackbarContext from './SnackbarContext';\nimport { MESSAGES, REASONS, originKeyExtractor, omitContainerKeys, DEFAULTS, merge, transformer, isDefined } from './utils/constants';\nimport SnackbarItem from './SnackbarItem';\nimport SnackbarContainer from './SnackbarContainer';\nimport warning from './utils/warning';\nimport { SnackbarProviderProps, SnackbarKey, SnackbarMessage, OptionsObject, RequiredBy, ProviderContext, TransitionHandlerProps } from '.';\nimport createChainedFunction from './utils/createChainedFunction';\n\ntype Reducer = (state: State) => State;\ntype SnacksByPosition = { [key: string]: Snack[] };\n\nexport interface Snack extends RequiredBy<OptionsObject, 'key' | 'variant' | 'anchorOrigin'> {\n    message: SnackbarMessage;\n    open: boolean;\n    entered: boolean;\n    requestClose: boolean;\n}\n\ninterface State {\n    snacks: Snack[];\n    queue: Snack[];\n    contextValue: ProviderContext;\n}\n\nclass SnackbarProvider extends Component<SnackbarProviderProps, State> {\n    constructor(props: SnackbarProviderProps) {\n        super(props);\n        this.state = {\n            snacks: [],\n            queue: [], // eslint-disable-line react/no-unused-state\n            contextValue: {\n                enqueueSnackbar: this.enqueueSnackbar.bind(this),\n                closeSnackbar: this.closeSnackbar.bind(this),\n                replaceContent: this.replaceContent.bind(this),\n            },\n        };\n    }\n\n    get maxSnack(): number {\n        return this.props.maxSnack || DEFAULTS.maxSnack;\n    }\n\n    /**\n     * Adds a new snackbar to the queue to be presented.\n     * Returns generated or user defined key referencing the new snackbar or null\n     */\n    enqueueSnackbar = (message: SnackbarMessage, opts: OptionsObject = {}): SnackbarKey => {\n        const {\n            key,\n            preventDuplicate,\n            ...options\n        } = opts;\n\n        const hasSpecifiedKey = isDefined(key);\n        const id = hasSpecifiedKey ? (key as SnackbarKey) : new Date().getTime() + Math.random();\n\n        const merger = merge(options, this.props, DEFAULTS);\n        const snack: Snack = {\n            key: id,\n            ...options,\n            message,\n            open: true,\n            entered: false,\n            requestClose: false,\n            variant: merger('variant'),\n            anchorOrigin: merger('anchorOrigin'),\n            autoHideDuration: merger('autoHideDuration'),\n        };\n\n        if (options.persist) {\n            snack.autoHideDuration = undefined;\n        }\n\n        this.setState((state) => {\n            if ((preventDuplicate === undefined && this.props.preventDuplicate) || preventDuplicate) {\n                const compareFunction = (item: Snack): boolean => (\n                    hasSpecifiedKey ? item.key === key : item.message === message\n                );\n\n                const inQueue = state.queue.findIndex(compareFunction) > -1;\n                const inView = state.snacks.findIndex(compareFunction) > -1;\n                if (inQueue || inView) {\n                    return state;\n                }\n            }\n\n            return this.handleDisplaySnack({\n                ...state,\n                queue: [...state.queue, snack],\n            });\n        });\n\n        return id;\n    };\n\n    replaceContent = (key: SnackbarKey, content: React.ReactNode) => {\n        return this.handleUpdateSnack(key, content);\n    }\n\n    /**\n     * Update the content of the snackbar with the given key.\n     */\n     handleUpdateSnack = (key: SnackbarKey, content: React.ReactNode) => {\n        this.setState(({ snacks }) => ({\n            snacks: snacks.map(item => (\n                item.key === key ? { ...item, content: content } : { ...item }\n            )),\n        }));\n    }\n\n    /**\n     * Reducer: Display snack if there's space for it. Otherwise, immediately\n     * begin dismissing the oldest message to start showing the new one.\n     */\n    handleDisplaySnack: Reducer = (state) => {\n        const { snacks } = state;\n        if (snacks.length >= this.maxSnack) {\n            return this.handleDismissOldest(state);\n        }\n        return this.processQueue(state);\n    };\n\n    /**\n     * Reducer: Display items (notifications) in the queue if there's space for them.\n     */\n    processQueue: Reducer = (state) => {\n        const { queue, snacks } = state;\n        if (queue.length > 0) {\n            return {\n                ...state,\n                snacks: [...snacks, queue[0]],\n                queue: queue.slice(1, queue.length),\n            };\n        }\n        return state;\n    };\n\n    /**\n     * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.\n     * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).\n     *\n     * Note 1: If there is already a message leaving the screen, no new messages are dismissed.\n     * Note 2: If the oldest message has not yet entered the screen, only a request to close the\n     *         snackbar is made. Once it entered the screen, it will be immediately dismissed.\n     */\n    handleDismissOldest: Reducer = (state) => {\n        if (state.snacks.some(item => !item.open || item.requestClose)) {\n            return state;\n        }\n\n        let popped = false;\n        let ignore = false;\n\n        const persistentCount = state.snacks.reduce((acc, current) => (\n            acc + (current.open && current.persist ? 1 : 0)\n        ), 0);\n\n        if (persistentCount === this.maxSnack) {\n            warning(MESSAGES.NO_PERSIST_ALL);\n            ignore = true;\n        }\n\n        const snacks = state.snacks.map((item) => {\n            if (!popped && (!item.persist || ignore)) {\n                popped = true;\n\n                if (!item.entered) {\n                    return {\n                        ...item,\n                        requestClose: true,\n                    };\n                }\n\n                if (item.onClose) item.onClose(null, REASONS.MAXSNACK, item.key);\n                if (this.props.onClose) this.props.onClose(null, REASONS.MAXSNACK, item.key);\n\n                return {\n                    ...item,\n                    open: false,\n                };\n            }\n\n            return { ...item };\n        });\n\n        return { ...state, snacks };\n    };\n\n    /**\n     * Set the entered state of the snackbar with the given key.\n     */\n    handleEnteredSnack: TransitionHandlerProps['onEntered'] = (node, isAppearing, key) => {\n        if (!isDefined(key)) {\n            throw new Error('handleEnteredSnack Cannot be called with undefined key');\n        }\n\n        this.setState(({ snacks }) => ({\n            snacks: snacks.map(item => (\n                item.key === key ? { ...item, entered: true } : { ...item }\n            )),\n        }));\n    }\n\n    /**\n     * Hide a snackbar after its timeout.\n     */\n    handleCloseSnack: TransitionHandlerProps['onClose'] = (event, reason, key) => {\n        // should not use createChainedFunction for onClose.\n        // because this.closeSnackbar called this function\n        if (this.props.onClose) {\n            this.props.onClose(event, reason, key);\n        }\n\n        if (reason === REASONS.CLICKAWAY) return;\n        const shouldCloseAll = key === undefined;\n\n        this.setState(({ snacks, queue }) => ({\n            snacks: snacks.map((item) => {\n                if (!shouldCloseAll && item.key !== key) {\n                    return { ...item };\n                }\n\n                return item.entered\n                    ? { ...item, open: false }\n                    : { ...item, requestClose: true };\n            }),\n            queue: queue.filter(item => item.key !== key), // eslint-disable-line react/no-unused-state\n        }));\n    };\n\n    /**\n     * Close snackbar with the given key\n     */\n    closeSnackbar: ProviderContext['closeSnackbar'] = (key) => {\n        // call individual snackbar onClose callback passed through options parameter\n        const toBeClosed = this.state.snacks.find(item => item.key === key);\n        if (isDefined(key) && toBeClosed && toBeClosed.onClose) {\n            toBeClosed.onClose(null, REASONS.INSTRUCTED, key);\n        }\n\n        this.handleCloseSnack(null, REASONS.INSTRUCTED, key);\n    }\n\n    /**\n     * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),\n     * it leaves the screen and immediately after leaving animation is done, this method\n     * gets called. We remove the hidden snackbar from state and then display notifications\n     * waiting in the queue (if any). If after this process the queue is not empty, the\n     * oldest message is dismissed.\n     */\n    // @ts-ignore\n    handleExitedSnack: TransitionHandlerProps['onExited'] = (event, key1, key2) => {\n        const key = key1 || key2;\n        if (!isDefined(key)) {\n            throw new Error('handleExitedSnack Cannot be called with undefined key');\n        }\n\n        this.setState((state) => {\n            const newState = this.processQueue({\n                ...state,\n                snacks: state.snacks.filter(item => item.key !== key),\n            });\n\n            if (newState.queue.length === 0) {\n                return newState;\n            }\n\n            return this.handleDismissOldest(newState);\n        });\n    };\n\n    render(): JSX.Element {\n        const { contextValue } = this.state;\n        const {\n            maxSnack: dontspread1,\n            preventDuplicate: dontspread2,\n            variant: dontspread3,\n            anchorOrigin: dontspread4,\n            iconVariant,\n            dense = DEFAULTS.dense,\n            hideIconVariant = DEFAULTS.hideIconVariant,\n            domRoot,\n            children,\n            classes = {},\n            ...props\n        } = this.props;\n\n        const categ = this.state.snacks.reduce<SnacksByPosition>((acc, current) => {\n            const category = originKeyExtractor(current.anchorOrigin);\n            const existingOfCategory = acc[category] || [];\n            return {\n                ...acc,\n                [category]: [...existingOfCategory, current],\n            };\n        }, {});\n\n        const snackbars = Object.keys(categ).map((origin) => {\n            const snacks = categ[origin];\n            return (\n                <SnackbarContainer\n                    key={origin}\n                    dense={dense}\n                    anchorOrigin={snacks[0].anchorOrigin}\n                    className={clsx(\n                        classes.containerRoot,\n                        classes[transformer.toContainerAnchorOrigin(origin)],\n                    )}\n                >\n                    {snacks.map(snack => (\n                        <SnackbarItem\n                            {...props}\n                            key={snack.key}\n                            snack={snack}\n                            dense={dense}\n                            iconVariant={iconVariant}\n                            hideIconVariant={hideIconVariant}\n                            classes={omitContainerKeys(classes)}\n                            onClose={this.handleCloseSnack}\n                            onExited={createChainedFunction([this.handleExitedSnack, this.props.onExited])}\n                            onEntered={createChainedFunction([this.handleEnteredSnack, this.props.onEntered])}\n                        />\n                    ))}\n                </SnackbarContainer>\n            );\n        });\n\n        return (\n            <SnackbarContext.Provider value={contextValue}>\n                {children}\n                {domRoot ? createPortal(snackbars, domRoot) : snackbars}\n            </SnackbarContext.Provider>\n        );\n    }\n}\n\nexport default SnackbarProvider;\n","import { useContext } from 'react';\nimport SnackbarContext from './SnackbarContext';\nimport { ProviderContext } from '.';\n\nexport default (): ProviderContext => useContext(SnackbarContext);\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport getDisplayName from './utils/getDisplayName';\nimport SnackbarContext from './SnackbarContext';\n\nconst withSnackbar = (Component) => {\n    const WrappedComponent = React.forwardRef((props, ref) => (\n        <SnackbarContext.Consumer>\n            {context => (\n                <Component\n                    {...props}\n                    ref={ref}\n                    enqueueSnackbar={context.enqueueSnackbar}\n                    closeSnackbar={context.closeSnackbar}\n                    replaceContent={context.replaceContent}\n                />\n            )}\n        </SnackbarContext.Consumer>\n    ));\n\n    if (process.env.NODE_ENV !== 'production') {\n        WrappedComponent.displayName = `WithSnackbar(${getDisplayName(Component)})`;\n    }\n\n    hoistNonReactStatics(WrappedComponent, Component);\n\n    return WrappedComponent;\n};\n\nexport default withSnackbar;\n"],"names":["React","createContext","allClasses","containerRoot","containerAnchorOriginTopCenter","containerAnchorOriginBottomCenter","containerAnchorOriginTopRight","containerAnchorOriginBottomRight","containerAnchorOriginTopLeft","containerAnchorOriginBottomLeft","DEFAULTS","maxSnack","dense","hideIconVariant","variant","autoHideDuration","anchorOrigin","vertical","horizontal","TransitionComponent","Slide","transitionDuration","enter","exit","capitalise","text","charAt","toUpperCase","slice","omitContainerKeys","classes","Object","keys","filter","key","reduce","obj","REASONS","TIMEOUT","CLICKAWAY","MAXSNACK","INSTRUCTED","transformer","origin","isDefined","value","numberOrNull","numberish","objectMerge","options","props","defaults","Root","styled","display","flexWrap","flexGrow","theme","breakpoints","up","minWidth","SnackbarContent","forwardRef","ref","className","clsx","componentName","DIRECTION","right","left","bottom","top","getTransitionDirection","WarningIcon","SvgIcon","d","ErrorIcon","InfoIcon","iconStyles","fontSize","marginInlineEnd","defaultIconVariants","default","undefined","success","style","warning","error","info","createChainedFunction","funcs","extraArg","acc","func","args","argums","indexOf","push","apply","this","useEnhancedEffect","window","useEventCallback","fn","current","contentRoot","lessPadding","variantSuccess","variantError","variantInfo","variantWarning","message","action","wrappedRoot","StyledSnackbar","children","ClickAwayListenerProps","disableWindowBlurListener","onClose","onMouseEnter","onMouseLeave","open","resumeHideDuration","other","timerAutoHide","handleClose","setAutoHideTimer","autoHideDurationParam","clearTimeout","setTimeout","handlePause","handleResume","addEventListener","removeEventListener","React.createElement","ClickAwayListener","onClickAway","event","backgroundColor","emphasize","palette","background","mode","type","position","transform","typography","body2","color","getContrastText","alignItems","padding","borderRadius","boxShadow","paddingLeft","marginLeft","marginRight","SnackbarItem","propClasses","timeout","useRef","useState","collapsed","setCollapsed","useEffect","snack","ariaAttributes","otherClassName","iconVariant","otherAction","otherContent","content","otherTranComponent","otherTranProps","TransitionProps","otherTranDuration","entered","singleContent","singleAction","singleAriaAttributes","snackMessage","singleTranComponent","singleTranProps","singleTranDuration","singleSnackProps","icon","_extends","aria-describedby","otherAriaAttributes","transitionProps","direction","callbacks","cbName","Collapse","unmountOnExit","in","onExited","root","appear","onExit","onExiting","onEnter","onEntering","onEntered","requestClose","INSTRCUTED","role","singleClassName","id","collapse","rootDense","center","boxSizing","maxHeight","zIndex","snackbar","height","width","transition","pointerEvents","SNACKBAR_INDENTS","maxWidth","down","flexDirection","xsWidthMargin","memo","combinedClassname","SnackbarProvider","_this","opts","preventDuplicate","hasSpecifiedKey","Date","getTime","Math","random","merger","name","merge","persist","setState","state","compareFunction","item","inQueue","queue","findIndex","inView","snacks","handleDisplaySnack","handleUpdateSnack","map","length","handleDismissOldest","processQueue","some","popped","ignore","node","isAppearing","Error","reason","shouldCloseAll","toBeClosed","find","handleCloseSnack","key1","key2","newState","contextValue","enqueueSnackbar","bind","closeSnackbar","replaceContent","render","dontspread1","domRoot","categ","anchor","category","snackbars","SnackbarContainer","_this2","handleExitedSnack","handleEnteredSnack","SnackbarContext","Provider","createPortal","Component","useContext","WrappedComponent","Consumer","context","hoistNonReactStatics"],"mappings":"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"}